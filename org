#!/usr/bin/env bash

#  find all directories matching name
#  find ~ -type d -name "tempus" -print
#  issue is having multiple dirs returned

#  look for notes file as $PROJECT.md - anywhere

#Â  not being able to add multiple projects in org_add
#

PROJECT_DIR=$HOME/git
ALT_PROJECT_DIR=$HOME/git/personal/projects

org-add() {
	TASK=$1
	PROJECT=$2

  declare -a arr=(
  "$PROJECT_DIR/$PROJECT/todo.md"
  "$ALT_PROJECT_DIR/mono/$PROJECT/todo.md"
  "$ALT_PROJECT_DIR/$PROJECT/todo.md"
  )

  WROTEFILE="false"
  for FILENAME in "${arr[@]}"
    do
      #   echo "$i"
    if [[ ! -e "$FILENAME" ]]; then
      # echo "$FILENAME not found"
      :  # pass
    else
      echo "found $FILENAME"
      echo $TASK >> $FILENAME
  fi
  done

  if [[ "$WROTEFILE" == "false" ]]; then
    FIRST="${arr[2]}"
    echo "no todo found - making at $FIRST"
    touch $FIRST
    echo $TASK >> $FIRST
  fi
  echo ""
  echo "$PROJECT tasks"
  echo "-----"
  cat $FILENAME
  echo ""
  WROTEFILE="true"
}

org-show() {
	if [[ -z "$1" ]]; then
    org-show-projects
  else
    org-show-project
fi
}

org-show-project() {
  PROJECT=$1
	FILENAME=$PROJECT_DIR/$PROJECT/todo.md
	if [[ -f $FILENAME ]]; then
		cat $FILENAME
	fi

	FILENAME=$ALT_PROJECT_DIR/$PROJECT/todo.md
	if [[ -f $FILENAME ]]; then
		cat $FILENAME
	fi
}

org-show-projects() {
  #  look for all todo.md files in home
  echo "finding project todo.md's ..."
  PROJECTS=$(find ~ -name "todo.md" | awk -F "/" '{print $(NF-1)}' | sort)
  echo " "
  echo "Projects"
  echo "-----"
  echo "$PROJECTS" | tr " " "\n"
}

org-add 'test' test
