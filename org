#!/usr/bin/env bash

#  find all directories matching name
#  find ~ -type d -name "tempus" -print
#  issue is having multiple dirs returned

#  look for notes file as $PROJECT.md - anywhere

#Â  not being able to add multiple projects in org_add

org-add() {
	TASK=$1
  shift
  for PROJECT in "$@"
  do
    org-add-single-project "$TASK" "$PROJECT"
   done
}

org-add-single-project() {
	TASK=$1
	PROJECT=$2

  #  hardcoded!
  declare -a arr=(
  "$HOME/git/$PROJECT/todo.md"
  "$HOME/git/mono/$PROJECT/todo.md"
  "$HOME/git/personal/projects/$PROJECT/todo.md"
  "$HOME/git/personal/projects/${PROJECT}.md"
  )

  WROTEFILE="false"
  for FILENAME in "${arr[@]}"
    do
    if [[ ! -f "$FILENAME" ]]; then
      :  # pass
    else
      echo "found $FILENAME"
      echo $TASK >> $FILENAME
      WROTEFILE="true"
      break
  fi
  done

  if [[ "$WROTEFILE" == "false" ]]; then
    echo "no todo found - making at $FILENAME"
    touch $FILENAME
    echo $TASK >> $FILENAME
    WROTEFILE="true"
  fi
  echo ""
  echo "$PROJECT tasks - $FILENAME"
  echo "-----"
  cat $FILENAME
  echo ""
}

org-show() {
	if [[ -z "$1" ]]; then
    org-show-projects
  else
    org-show-project $1
fi
}

org-show-project() {
	PROJECT=$1

  declare -a arr=(
  "$HOME/git/$PROJECT/todo.md"
  "$HOME/git/mono/$PROJECT/todo.md"
  "$HOME/git/personal/projects/$PROJECT/todo.md"
  "$HOME/git/personal/projects/${PROJECT}.md"
  )

  for FILENAME in "${arr[@]}"
    do
    if [[ ! -f "$FILENAME" ]]; then
      :  # pass
    else
      cat $FILENAME
  fi
  done


}

org-show-projects() {
  #  look for all todo.md files in home
  echo "finding project todo.md's ..."
  PROJECTS=$(find /Users/adam/git -name "todo.md" | awk -F "/" '{print $(NF-1)}' | sort)
  echo " "
  echo "Projects"
  echo "-----"
  echo "$PROJECTS" | tr " " "\n"
}
